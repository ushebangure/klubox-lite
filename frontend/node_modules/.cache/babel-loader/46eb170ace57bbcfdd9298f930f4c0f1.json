{"ast":null,"code":"var _jsxFileName = \"/home/bradford/Learning/klubox-lite/frontend/src/components/Login.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router\";\nimport { URL } from \"../config\";\nimport axios from \"axios\";\nimport { validateEmail, decodeToken, storeCookie, generatePermissions } from \"../utils\";\nimport { FormError } from \"./Error\";\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      error: \"No error\"\n    };\n\n    this.handleUserInput = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"Login\",\n      method: \"POST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Email:\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"TextBox\",\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"email@klu.org\",\n      onChange: this.handleUserInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Password:\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"TextBox\",\n      type: \"password\",\n      name: \"password\",\n      onChange: this.handleUserInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), this.state.error !== \"No error\" && React.createElement(FormError, {\n      style: {\n        \"color\": \"red\"\n      },\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"LoginButton\",\n      onClick: e => {\n        e.preventDefault();\n\n        if (validateEmail(this.state.email) && this.state.password) {\n          axios.post(\"http://35.241.227.14/auth/jwt\", {\n            email: this.state.email,\n            password: this.state.password\n          }).then(response => {\n            if (response.status === 201 && response.data && response.data.token) {\n              const token = response.data.token;\n              const user = decodeToken(token);\n              generatePermissions(user);\n              const location = {\n                pathname: '/dashboard'\n              };\n              this.setState({\n                password: ''\n              });\n              storeCookie(token);\n              this.props.history.push(location);\n            }\n          }).catch(err => {\n            if (err.message === 'Request failed with status code 400') {\n              this.setState({\n                error: 'Username/Password incorrect'\n              });\n            }\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"login\"));\n  }\n\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["/home/bradford/Learning/klubox-lite/frontend/src/components/Login.js"],"names":["React","withRouter","URL","axios","validateEmail","decodeToken","storeCookie","generatePermissions","FormError","Login","Component","state","email","password","error","handleUserInput","e","name","target","value","setState","render","preventDefault","post","then","response","status","data","token","user","location","pathname","props","history","push","catch","err","message"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router\";\nimport { URL } from \"../config\";\nimport axios from \"axios\";\nimport { validateEmail, decodeToken, storeCookie, generatePermissions } from \"../utils\";\nimport { FormError } from \"./Error\";\n\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    error: \"No error\"\n  };\n\n  handleUserInput = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  render() {\n    return (\n        <form className=\"Login\" method=\"POST\">\n          <label>\n            <i>Email:</i><br />\n            <input className=\"TextBox\" type=\"email\" name=\"email\" placeholder=\"email@klu.org\"onChange={this.handleUserInput} />\n          </label>\n          <br />\n          <label>\n            <i>Password:</i><br />\n            <input className=\"TextBox\" type=\"password\" name=\"password\" onChange={this.handleUserInput} />\n          </label>\n          <br />\n          {(this.state.error !== \"No error\") && <FormError style={{\"color\": \"red\"}} error={this.state.error} /> }\n          <br />\n          <button\n            className=\"LoginButton\"\n            onClick={e => {\n              e.preventDefault();\n\n              if (validateEmail(this.state.email) && this.state.password) {\n                axios\n                  .post(`http://35.241.227.14/auth/jwt`, {\n                    email: this.state.email,\n                    password: this.state.password\n                  })\n                  .then((response) => {\n                    if (\n                      response.status === 201 &&\n                      response.data &&\n                      response.data.token\n                    ) {\n\n                      const token = response.data.token\n                      const user = decodeToken(token);\n\n                      generatePermissions(user)\n\n                      const location = {\n                        pathname: '/dashboard'\n                      }\n                      this.setState({password: ''})\n                      storeCookie(token)\n                      this.props.history.push(location)\n                    }\n                  }).catch(err => {\n                    if (err.message === 'Request failed with status code 400') {\n                      this.setState({\n                        error: 'Username/Password incorrect'\n                      })\n                    }\n                  });\n                }\n              }\n            }\n          >\n            login\n          </button>\n        </form>\n    );\n  }\n}\n\nexport default withRouter(Login);\n"]},"metadata":{},"sourceType":"module"}