{"ast":null,"code":"// Utility functions for the components\nconst emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nexport const validateEmail = email => emailRegex.test(String(email).toLowerCase()); // Decode token\n\nexport const decodeToken = token => {\n  try {\n    token = token.split('.')[1];\n    return atob(token);\n  } catch (e) {\n    throw new Error(\"Error: \".concat(e.message));\n  }\n}; // Set token in session\n\nexport const storeCookie = token => {\n  sessionStorage.setItem('token', token);\n}; // Get the token\n\nexport const getToken = () => {\n  const token = sessionStorage.getItem('token');\n\n  if (token) {\n    return token;\n  }\n\n  return null;\n}; // generate permissions\n\nexport const generatePermissions = user => {\n  const permissions = [];\n\n  if (!user) {\n    return ['', '', ''];\n  }\n\n  user = JSON.parse(user);\n\n  if (user.iup) {\n    if (user.iup.includes('agent')) {\n      permissions.push(true);\n    } else {\n      permissions.push('');\n    }\n\n    if (user.iup.includes('payout')) {\n      permissions.push(true);\n    } else {\n      permissions.push('');\n    }\n\n    if (user.iup.includes('admin')) {\n      permissions.push(true);\n    } else {\n      permissions.push('');\n    }\n  } else {\n    permissions = ['', '', ''];\n  }\n\n  const perms = {\n    transView: permissions[2],\n    transact: permissions[0] || permissions[2],\n    payout: permissions[1] || permissions[2]\n  };\n  sessionStorage.setItem('transView', perms.transView);\n  sessionStorage.setItem('transact', perms.transact);\n  sessionStorage.setItem('payout', perms.payout);\n};\nexport const getActiveTab = perms => {\n  var activeTab;\n  console.log(perms);\n\n  if (perms.transView) {\n    return \"transactions\";\n  }\n\n  if (perms.transact) {\n    return \"transact\";\n  }\n\n  if (perms.agent) {\n    return \"payout\";\n  }\n\n  return \"\";\n}; // Method for printing receipt\n// TODO: complete method\n\nexport const printReceipt = (name, id, sender, amount, currency, ref, sentDate) => {}; // Method for validating transaction\n\nexport const validateTransaction = trans => {\n  if (Object.values(trans).indexOf('') > -1) {\n    return true;\n  }\n\n  return false;\n};","map":{"version":3,"sources":["/home/bradford/Learning/klubox-lite/frontend/src/utils.js"],"names":["emailRegex","validateEmail","email","test","String","toLowerCase","decodeToken","token","split","atob","e","Error","message","storeCookie","sessionStorage","setItem","getToken","getItem","generatePermissions","user","permissions","JSON","parse","iup","includes","push","perms","transView","transact","payout","getActiveTab","activeTab","console","log","agent","printReceipt","name","id","sender","amount","currency","ref","sentDate","validateTransaction","trans","Object","values","indexOf"],"mappings":"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","sourcesContent":["// Utility functions for the components\nconst emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nexport const validateEmail = email =>\n  emailRegex.test(String(email).toLowerCase());\n\n// Decode token\nexport const decodeToken = token => {\n  try {\n    token = token.split('.')[1]\n    return atob(token);\n  } catch (e) {\n    throw new Error(`Error: ${e.message}`)\n  }\n}\n\n// Set token in session\nexport const storeCookie = token => {\n  sessionStorage.setItem('token', token)\n}\n\n// Get the token\nexport const getToken = () => {\n  const token = sessionStorage.getItem('token')\n  if (token) {\n    return token\n  }\n  return null\n}\n\n// generate permissions\nexport const generatePermissions = user => {\n  const permissions = []\n\n  if (!user) {\n    return ['', '', '']\n  }\n\n  user = JSON.parse(user)\n\n  if (user.iup) {\n    if(user.iup.includes('agent')) {\n      permissions.push(true)\n    } else {\n      permissions.push('')\n    }\n\n    if (user.iup.includes('payout')) {\n      permissions.push(true)\n    } else {\n      permissions.push('')\n    }\n\n    if(user.iup.includes('admin')) {\n      permissions.push(true)\n    } else {\n      permissions.push('')\n    }\n  } else {\n    permissions = ['', '', '']\n  }\n\n  const perms = {\n    transView: permissions[2],\n    transact: permissions[0] || permissions[2],\n    payout: permissions[1] || permissions[2]\n  }\n\n  sessionStorage.setItem('transView', perms.transView)\n  sessionStorage.setItem('transact', perms.transact)\n  sessionStorage.setItem('payout', perms.payout)\n}\n\nexport const getActiveTab = perms => {\n  var activeTab\n  console.log(perms);\n  if (perms.transView) {\n    return \"transactions\"\n  }\n  if (perms.transact) {\n    return \"transact\"\n  }\n  if (perms.agent) {\n    return \"payout\"\n  }\n\n  return \"\"\n}\n\n// Method for printing receipt\n// TODO: complete method\nexport const printReceipt = (name, id, sender, amount, currency, ref, sentDate) => {\n\n}\n\n// Method for validating transaction\nexport const validateTransaction = trans => {\n  if (Object.values(trans).indexOf('') > -1) {\n    return true\n  }\n  return false\n}\n"]},"metadata":{},"sourceType":"module"}