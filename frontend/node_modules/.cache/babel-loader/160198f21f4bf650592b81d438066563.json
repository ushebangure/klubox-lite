{"ast":null,"code":"var _jsxFileName = \"/home/bradford/Learning/klubox-lite/frontend/src/components/TransactionListManagementTab.js\";\nimport React from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nexport class TransactionListManagementTab extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fromDate: this.props.fromDate,\n      toDate: this.props.toDate,\n      filter: this.props.filter,\n      reportType: \"salesType\",\n      salesType: true,\n      agentsType: false\n    };\n\n    this.handleInput = (input, property) => {\n      this.setState({\n        [property]: input\n      });\n      this.props.changeList(property, input);\n    };\n\n    this.handleFilterInput = e => {\n      this.handleInput(e.target.value, 'filter');\n    };\n\n    this.handleReportInput = e => {\n      [\"salesType\", \"agentsType\"].forEach(type => {\n        if (type !== e.target.name) {\n          this.setState({\n            [type]: false\n          });\n        } else {\n          this.setState({\n            [type]: !this.state[type],\n            reportType: type\n          });\n        }\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"TransListManage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"filter\",\n      placeholder: \"Enter name or transaction reference\",\n      onKeyDown: this.handleFilterInput,\n      style: {\n        width: 400\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), \"\\xA0\", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Range\"), \": \\xA0 from \\xA0\", React.createElement(DatePicker, {\n      selected: this.state.fromDate,\n      onChange: date => {\n        this.handleInput(date, 'fromDate');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), \"\\xA0 to \\xA0\", React.createElement(DatePicker, {\n      selected: this.state.toDate,\n      onChange: date => {\n        this.handleInput(date, 'toDate');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ReportType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Report Type:\", React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"salesType\",\n      checked: this.state.salesType,\n      onChange: this.handleReportInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), \"Sales\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"agentsType\",\n      checked: this.state.agentsType,\n      onChange: this.handleReportInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), \"Agents\")), React.createElement(\"button\", {\n      onClick: () => {// TODO: add the method to generate}} />\n      },\n      className: \"GenerateButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Generate Report\"));\n  }\n\n}","map":{"version":3,"sources":["/home/bradford/Learning/klubox-lite/frontend/src/components/TransactionListManagementTab.js"],"names":["React","DatePicker","TransactionListManagementTab","Component","state","fromDate","props","toDate","filter","reportType","salesType","agentsType","handleInput","input","property","setState","changeList","handleFilterInput","e","target","value","handleReportInput","forEach","type","name","render","width","date"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport DatePicker from \"react-datepicker\"\nimport \"react-datepicker/dist/react-datepicker.css\"\n\nexport class TransactionListManagementTab extends React.Component {\n  state = {\n    fromDate: this.props.fromDate,\n    toDate: this.props.toDate,\n    filter: this.props.filter,\n    reportType: \"salesType\",\n    salesType: true,\n    agentsType: false\n  };\n\n  handleInput = (input, property) => {\n    this.setState({\n      [property]: input\n    })\n    this.props.changeList(property, input)\n  };\n\n  handleFilterInput = e => {\n    this.handleInput(e.target.value, 'filter')\n  }\n\n  handleReportInput = e => {\n    [\"salesType\", \"agentsType\"].forEach(type => {\n      if (type !== e.target.name) {\n        this.setState({\n          [type]: false\n        });\n      } else {\n        this.setState({\n          [type]: !this.state[type],\n          reportType: type\n        });\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"TransListManage\">\n          <input\n            type=\"text\"\n            name=\"filter\"\n            placeholder=\"Enter name or transaction reference\"\n            onKeyDown={this.handleFilterInput}\n            style={{width: 400}}\n          />&nbsp;\n        <b>Range</b>: &nbsp; from &nbsp;\n        <DatePicker\n            selected={this.state.fromDate}\n            onChange={(date) => {\n              this.handleInput(date, 'fromDate')\n            }}\n          />\n        &nbsp; to &nbsp;\n          <DatePicker\n            selected={this.state.toDate}\n            onChange={(date) => {\n              this.handleInput(date, 'toDate')\n            }}\n          />\n        <div className=\"ReportType\">\n          Report Type:\n          <div>\n            <input\n              type=\"checkbox\"\n              name=\"salesType\"\n              checked={this.state.salesType}\n              onChange={this.handleReportInput}\n            />\n            Sales\n          </div>\n          <div>\n            <input\n              type=\"checkbox\"\n              name=\"agentsType\"\n              checked={this.state.agentsType}\n              onChange={this.handleReportInput}\n            />\n            Agents\n          </div>\n        </div>\n        <button onClick={() => {\n            // TODO: add the method to generate}} />\n          }} className=\"GenerateButton\">\n         Generate Report\n       </button>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}